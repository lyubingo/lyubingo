<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lyubingo blog</title>
  
  <subtitle>LYUBINGO BLOG</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lyubingo.github.io/"/>
  <updated>2018-06-11T01:46:41.199Z</updated>
  <id>https://lyubingo.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac的PHP环境原来是怎么配置的</title>
    <link href="https://lyubingo.github.io/2018/06/08/3mac%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8E%9F%E6%9D%A5%E6%98%AF%E6%80%8E%E4%B9%88%E9%85%8D%E7%BD%AE%E7%9A%84/"/>
    <id>https://lyubingo.github.io/2018/06/08/3mac的环境原来是怎么配置的/</id>
    <published>2018-06-08T10:02:47.000Z</published>
    <updated>2018-06-11T01:46:41.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建PHP环境"><a href="#搭建PHP环境" class="headerlink" title="搭建PHP环境"></a>搭建PHP环境</h1><p>电脑买了也有一段时间了，买回来没多久我就搭了环境，<br>参照的是这篇文章：</p><p><a href="https://segmentfault.com/a/1190000011760937" target="_blank" rel="noopener">原文地址</a></p><p>在此表示很感谢，因为很详细。</p><p>我大概过一下。</p><blockquote><p>Preparing<br>安装 Homebrew、Ohmyzsh、开发常用包&amp;软件</p></blockquote><h3 id="1-1-Homebrew"><a href="#1-1-Homebrew" class="headerlink" title="1.1 Homebrew"></a>1.1 Homebrew</h3><p>Homebrew又叫Brew，是MacOS上的软件包管理工具，能在Mac中方便的安装软件或者卸载软件，和linux系统中的yum非常相似，只需要一个命令，非常方便。官方网站：<a href="http://brew.sh" target="_blank" rel="noopener">http://brew.sh</a></p><p>（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><p>检验是否安装成功</p><blockquote><p>brew doctor</p></blockquote><p>安装常用软件包</p><blockquote><p>brew install wget<br>brew install autoconf<br>brew install openssl</p></blockquote><p>Brew常用语句，以php70为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#我这里以操作 php70 为例</span><br><span class="line">brew update                        #更新brew可安装包，建议每次执行一下</span><br><span class="line">brew search php70                  #搜索php7.0</span><br><span class="line">brew tap josegonzalez/php          #安装扩展&lt;gihhub_user/repo&gt;   </span><br><span class="line">brew tap                           #查看安装的扩展列表</span><br><span class="line">brew install php70                 #安装php7.0</span><br><span class="line">brew remove  php70                 #卸载php7.0</span><br><span class="line">brew upgrade php70                 #升级php7.0</span><br><span class="line">brew options php70                 #查看php7.0安装选项</span><br><span class="line">brew info    php70                 #查看php7.0相关信息</span><br><span class="line">brew home    php70                 #访问php7.0官方网站</span><br></pre></td></tr></table></figure></p><p><em>人在天朝的话，极有可能出现安装速度过于缓慢的情况，有时候会让你感觉安装处于假死的状态，不必担心，耐心等待即可，切不可心烦意乱的关闭终端窗口（网上有其他教程说可以切换 brew 的源到中科大 CDN，本人亲测：中科大 CDN 虽然快很多，但是clone 下来的文件和原本源存在一定差异，更新不及时。个人建议还是耐心等待，使用原本的源），我是翻墙出去的，嘻嘻。</em></p><h3 id="1-2-Oh-my-zsh"><a href="#1-2-Oh-my-zsh" class="headerlink" title="1.2 Oh my zsh"></a>1.2 Oh my zsh</h3><p>目前常用的 Linux 系统和 Mac OS 系统的默认 Shell 都是 bash，但是真正强大的 Shell 是深藏不露的 zsh，史称『终极 Shell』，这玩意儿就像「X天 Php 从入门到放弃」系列，但这次是真的神功速成。Github：<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">https://github.com/robbyrusse…</a> </p><p>安装方法：（打开 Terminal 终端，输入）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure></p><p><em>在天朝的话，极有可能出现安装速度过于缓慢的情况，有时候会让你感觉安装处于假死的状态，不必担心，耐心等待即可，切不可心烦意乱的关闭终端窗口（网上有其他教程说可以切换 brew 的源到中科大 CDN，本人亲测：中科大 CDN 虽然快很多，但是clone 下来的文件和原本源存在一定差异，更新不及时。个人建议还是耐心等待，使用原本的源）</em></p><h3 id="1-3-Xcode"><a href="#1-3-Xcode" class="headerlink" title="1.3 Xcode"></a>1.3 Xcode</h3><p>Xcode 是苹果出品的包含一系列工具及库的开发套件。</p><blockquote><p>通过 AppStore 安装最新版本的 Xcode</p></blockquote><p>我们一般不会用 Xcode 来开发后端项目。但这一步也是必须的，因为 Xcode 会附带安装一些如 Git 等必要的软件</p><h4 id="1-3-1-Command-Line-Tools-for-Xcode"><a href="#1-3-1-Command-Line-Tools-for-Xcode" class="headerlink" title="1.3.1 Command Line Tools for Xcode"></a>1.3.1 Command Line Tools for Xcode</h4><p>这一步会帮你安装许多常见的基于 Unix 的工具。Xcode 命令行工具作为 Xcode 的一部分，包含了 GCC 编译器</p><p>安装方法（打开 Terminal 终端，输入）：</p><blockquote><p>xcode-select –install</p></blockquote><p>当 Xcode 和 Xcode Command Line Tools 安装完成后，你需要启动 Xcode，并点击同意接受许可协议，然后关闭 Xcode 就可以了。这一步骤也是必须的，否则 Xcode 包含的一系列开发工具都将不可用。</p><blockquote><p>Working On<br>安装 Mysql、Php72、redis、Nginx、创建虚拟机、配置 SSL</p></blockquote><h3 id="2-1-Mysql"><a href="#2-1-Mysql" class="headerlink" title="2.1 Mysql"></a>2.1 Mysql</h3><blockquote><p>brew install mysql</p></blockquote><p>MySQL的安装包相对较大，在这个步骤需要等待一段时间，下载失败后可多次尝试安装，Brew每次会自动寻找合适的下载源</p><p>设置 Mysql 开机启动方法（打开 Terminal 终端，输入）：</p><blockquote><p>ln -sfv /usr/local/opt/mysql/*.plist ~/Library/LaunchAgents<br>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist</p></blockquote><p>初始化、启动方法（打开 Terminal 终端，输入）：</p><blockquote><p>//正常初始化<br>/usr/local/opt/mysql/bin/mysql_secure_installation<br>//若出错请启动服务<br>brew services start mysql</p></blockquote><p>安全配置方法（Terminal 终端会提示[EnglishVersion]）：  </p><blockquote><p>Enter current password for root (enter for none):<br>直接 Enter，因为没有设置过<br>Change the root password? [Y/n]<br>是否更改 root 用户的密码<br>Remove anonymous users? [Y/n]<br>不需要，键入 Y<br>Disallow root login remotely? [Y/n]<br>禁止root远程登录，建议键入 Y<br>Remove test database and access to it? [Y/n]<br>删除测试数据表，建议键入 Y<br>Reload privilege tables now? [Y/n]<br>确保设置生效，键入 Y</p></blockquote><p>检验安装成功方法（打开 Terminal 终端，输入）：</p><p>查看端口 <code>ps aux | grep mysql</code></p><p>测试 Mysql 连接 <code>mysql -u root -p你设置的密码</code></p><p>比如已123456为例：</p><blockquote><p>mysql -u root -p 123456<br>也可以这样<br>mysql -uroot -p123456</p></blockquote><p>安装 Phpmyadmin 方法（打开 Terminal 终端，输入）：</p><blockquote><p>brew install phpmyadmin</p></blockquote><h3 id="2-2-Php"><a href="#2-2-Php" class="headerlink" title="2.2 Php"></a>2.2 Php</h3><p>安装准备（打开 Terminal 终端，输入）：</p><blockquote><p>brew tap homebrew/dupes<br>brew tap homebrew/versions<br>brew tap homebrew/homebrew-php</p></blockquote><p>如果我没记错的话，应该是报错了，原因是brew移除了它们。不管，接着来：</p><p>安装php72</p><blockquote><p>brew install php72</p></blockquote><p>配置 Php72 环境变量（打开 Terminal 终端，输入）：</p><blockquote><p>echo ‘export PATH=”$(brew –prefix php72)/bin:$PATH”‘ &gt;&gt; ~/.bash_profile<br>echo ‘export PATH=”$(brew –prefix php72)/sbin:$PATH”‘ &gt;&gt; ~/.bash_profile<br>echo ‘export PATH=”/usr/local/bin:/usr/local/sbib:$PATH”‘ &gt;&gt; ~/.bash_profile<br>source ~/.bash_profile</p></blockquote><p>由于Mac自带了php和php-fpm，因此需要添加系统环境变量PATH来替代自带PHP版本。</p><p>验证 Php72 配置（打开 Terminal 终端，输入）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">brew安装的php，正常会显示 php7.2.0betaX  </span><br><span class="line">php -v #Mac自带的Php，正常会显示 php7.1.7  </span><br><span class="line">/usr/bin/php -v  #brew安装的php-fpm，正常会显示 php7.2.0betaX  </span><br><span class="line">php-fpm -v#Mac自带的Php-fpm，正常会显示 php7.1.7  </span><br><span class="line">/usr/bin/php-fpm -v</span><br></pre></td></tr></table></figure></p><p>可以在一开始就查看自带php的版本，因为php和mac自带的php都有可能升级，以上参数仅做参考。</p><blockquote><p>vim /usr/local/etc/php/7.2/php-fpm.conf /<strong>找到pid相关，去掉pid = run/php-fpm.pid前的“;”, 那么php-fpm的pid文件就会自动产生在 /usr/local/var/run/php-fpm.pid</strong>/</p></blockquote><p>php-fpm验证与启动（打开 Terminal 终端，输入）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#测试php-fpm配置 </span><br><span class="line">php-fpm -t</span><br><span class="line">php-fpm -c /usr/local/etc/php/7.2/php.ini -y /usr/local/etc/php/7.2/php-fpm.conf -t  </span><br><span class="line">#启动php-fpm  </span><br><span class="line">php-fpm -D  </span><br><span class="line">php-fpm -c /usr/local/etc/php/7.2/php.ini -y /usr/local/etc/php/7.2/php-fpm.conf -D  </span><br><span class="line">#关闭php-fpm  </span><br><span class="line">kill -INT `cat /usr/local/var/run/php-fpm.pid`  </span><br><span class="line">#重启php-fpm  </span><br><span class="line">kill -USR2 `cat /usr/local/var/run/php-fpm.pid`</span><br></pre></td></tr></table></figure></p><p>如果出现两个[notice]，不用管，除了他们没有其他错误的话，php-fpm 是可以正常启动了。如果出现其他错误，请尝试百度搜索，或者来联系我(原作者)</p><p>php-fpm设置开机启动（打开 Terminal 终端，输入）：</p><blockquote><p>ln -sfv /usr/local/opt/php72/*.plist ~/Library/LaunchAgents<br>launchctl load ~/Library/LaunchAgents/homebrew.mxcl.php56.plist</p></blockquote><p>以上要选择自己对应的路径地址。</p><p>安装 composer（打开 Terminal 终端，输入）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer  </span><br><span class="line">#改为国内源  </span><br><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure></p><h3 id="2-3-Nginx"><a href="#2-3-Nginx" class="headerlink" title="2.3 Nginx"></a>2.3 Nginx</h3><p>安装 Nginx 方法（打开 Terminal 终端，输入）：</p><blockquote><p>brew install nginx</p></blockquote><p>Nginx的安装包相对较大，在这个步骤需要等待一段时间，下载失败后可多次尝试安装，Brew每次会自动寻找合适的下载源</p><p>启动 Nginx 方法（打开 Terminal 终端，输入）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#测试nginx配置是否有语法错误  </span><br><span class="line">nginx -t</span><br><span class="line">#打开 nginx</span><br><span class="line">sudo nginx</span><br><span class="line">#重新加载配置|重启|停止|退出 nginx</span><br><span class="line">nginx -s reload|reopen|stop|quit</span><br><span class="line">#也可以使用Mac的launchctl来启动|停止 nginx</span><br><span class="line">launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br><span class="line">launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br></pre></td></tr></table></figure></p><p>设置 Nginx 开机启动方法（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -sfv /usr/local/opt/nginx/*.plist ~/Library/LaunchAgents</span><br><span class="line">launchctl load ~/Library/LaunchAgents/homebrew.mxcl.nginx.plist</span><br></pre></td></tr></table></figure><p>设置 Nginx 监听端口权限（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown root:wheel /usr/local/Cellar/nginx/1.12.1/bin/nginx</span><br><span class="line">sudo chmod u+s /usr/local/Cellar/nginx/1.12.1/bin/nginx</span><br></pre></td></tr></table></figure><p>这个自己根据版本号来哈</p><p>配置Nginx.conf（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#配置需要用到的目录</span><br><span class="line">mkdir -p /usr/local/var/logs/nginx</span><br><span class="line">mkdir -p /usr/local/etc/nginx/sites-available</span><br><span class="line">mkdir -p /usr/local/etc/nginx/sites-enabled</span><br><span class="line">mkdir -p /usr/local/etc/nginx/conf.d</span><br><span class="line">mkdir -p /usr/local/etc/nginx/ssl</span><br><span class="line">sudo mkdir -p /var/www</span><br><span class="line">sudo chown :staff /var/www</span><br><span class="line">sudo chmod 775 /var/www</span><br><span class="line">#使用 vim 编辑器编辑 nginx.conf</span><br><span class="line">vim /usr/local/etc/nginx/nginx.conf</span><br><span class="line">#nginx.conf 文件中此段内容部分，输入或修改为以下内容</span><br><span class="line">pid        /usr/local/var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  256;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  /usr/local/var/logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">    port_in_redirect off;</span><br><span class="line"></span><br><span class="line">    include /usr/local/etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vim 编辑器的退出并保存：按 ECS =&gt; 按 CAPS LOCK（大写键） =&gt; 按两下 Z</p><p>配置php-fpm 配置文件（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#使用 vim 编辑器编辑 php-fpm 配置</span><br><span class="line">vim /usr/local/etc/nginx/conf.d/php-fpm</span><br><span class="line">#写入以下内容</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    try_files                   $uri = 404;</span><br><span class="line">    fastcgi_pass                127.0.0.1:9000;</span><br><span class="line">    fastcgi_index               index.php;</span><br><span class="line">    fastcgi_intercept_errors    on;</span><br><span class="line">    include /usr/local/etc/nginx/fastcgi.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>nginx 虚拟机配置（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#创建 info.php index.html 404.html 403.html文件到 /var/www 下面</span><br><span class="line">vi /var/www/info.php</span><br><span class="line">//输入：&lt;?php phpinfo() ?&gt;</span><br><span class="line">vi /var/www/index.html</span><br><span class="line">//输入：&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;Default Page&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=&quot;center&quot;&gt;Default&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">vi /var/www/403.html</span><br><span class="line">//输入：&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;403 Page&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=&quot;center&quot;&gt;Default&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">vi /var/www/404.html</span><br><span class="line">//输入：&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;404 Page&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 align=&quot;center&quot;&gt;Default&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">配置虚拟主机配置文件（打开 Terminal 终端，输入）：</span><br><span class="line"></span><br><span class="line">#使用 vim 编辑器编辑虚拟主机配置</span><br><span class="line">vim /usr/local/etc/nginx/sites-available/default</span><br><span class="line">#输入以下内容</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    root         /var/www/;</span><br><span class="line"></span><br><span class="line">    access_log  /usr/local/var/logs/nginx/default.access.log  main;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line">        autoindex   on;</span><br><span class="line">        include     /usr/local/etc/nginx/conf.d/php-fpm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /info &#123;</span><br><span class="line">        allow   127.0.0.1;</span><br><span class="line">        deny    all;</span><br><span class="line">        rewrite (.*) /.info.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page  404     /404.html;</span><br><span class="line">    error_page  403     /403.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置SSL虚拟主机配置文件（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#使用 vim 编辑器编辑SSL虚拟主机配置</span><br><span class="line">vim /usr/local/etc/nginx/sites-available/default-ssl</span><br><span class="line">#输入以下内容</span><br><span class="line">server &#123;</span><br><span class="line">    listen       443;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    root       /var/www/;</span><br><span class="line"></span><br><span class="line">    access_log  /usr/local/var/logs/nginx/default-ssl.access.log  main;</span><br><span class="line"></span><br><span class="line">    ssl                  on;</span><br><span class="line">    ssl_certificate      ssl/localhost.crt;</span><br><span class="line">    ssl_certificate_key  ssl/localhost.key;</span><br><span class="line"></span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    ssl_protocols  SSLv2 SSLv3 TLSv1;</span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers   on;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        include   /usr/local/etc/nginx/conf.d/php-fpm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location = /info &#123;</span><br><span class="line">        allow   127.0.0.1;</span><br><span class="line">        deny    all;</span><br><span class="line">        rewrite (.*) /.info.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    error_page  404     /404.html;</span><br><span class="line">    error_page  403     /403.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置phpmyadmin虚拟主机配置文件（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#使用 vim 编辑器编辑phpmyadmin虚拟主机配置</span><br><span class="line">vim /usr/local/etc/nginx/sites-available/phpmyadmin</span><br><span class="line">#输入以下内容</span><br><span class="line">server &#123;</span><br><span class="line">    listen       306;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    root    /usr/local/share/phpmyadmin;</span><br><span class="line"></span><br><span class="line">    error_log   /usr/local/var/logs/nginx/phpmyadmin.error.log;</span><br><span class="line">    access_log  /usr/local/var/logs/nginx/phpmyadmin.access.log main;</span><br><span class="line"></span><br><span class="line">    ssl                  on;</span><br><span class="line">    ssl_certificate      ssl/phpmyadmin.crt;</span><br><span class="line">    ssl_certificate_key  ssl/phpmyadmin.key;</span><br><span class="line"></span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line"></span><br><span class="line">    ssl_protocols  SSLv2 SSLv3 TLSv1;</span><br><span class="line">    ssl_ciphers  HIGH:!aNULL:!MD5;</span><br><span class="line">    ssl_prefer_server_ciphers   on;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line">        include   /usr/local/etc/nginx/conf.d/php-fpm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里 phpmyadmin 默认设置为306端口，且开启 ssl</p><p>配置 SSL（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/etc/nginx/ssl</span><br><span class="line">openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj &quot;/C=US/ST=State/L=Town/O=Office/CN=localhost&quot; -keyout /usr/local/etc/nginx/ssl/localhost.key -out /usr/local/etc/nginx/ssl/localhost.crt</span><br><span class="line">openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 -subj &quot;/C=US/ST=State/L=Town/O=Office/CN=phpmyadmin&quot; -keyout /usr/local/etc/nginx/ssl/phpmyadmin.key -out /usr/local/etc/nginx/ssl/phpmyadmin.crt</span><br></pre></td></tr></table></figure><p>创建虚拟主机软连接并开启（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -sfv /usr/local/etc/nginx/sites-available/default /usr/local/etc/nginx/sites-enabled/default</span><br><span class="line">ln -sfv /usr/local/etc/nginx/sites-available/default-ssl /usr/local/etc/nginx/sites-enabled/default-ssl</span><br><span class="line">ln -sfv /usr/local/etc/nginx/sites-available/phpmyadmin /usr/local/etc/nginx/sites-enabled/phpmyadmin</span><br></pre></td></tr></table></figure><p>重新装载 nginx（打开 Terminal 终端，输入）：</p><blockquote><p>sudo nginx -s reload</p></blockquote><p>也不是每次都得用“块”，是吧。</p><p>可能会要求输入密码</p><p>测试 nginx 开启情况（打开浏览器，地址栏输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">http://localhost</span><br><span class="line">http://localhost/info.php</span><br><span class="line">http://localhost/404.html</span><br><span class="line">https://localhost/index.html(SSL)</span><br><span class="line">https://localhost/info.php(SSL)</span><br><span class="line">https://localhost/404.html(SSL)</span><br><span class="line">https://localhost:306(SSL)</span><br></pre></td></tr></table></figure><h3 id="2-4-Redis"><a href="#2-4-Redis" class="headerlink" title="2.4 Redis"></a>2.4 Redis</h3><p>安装方法（打开 Terminal 终端，输入）：</p><blockquote><p>brew install redis</p></blockquote><p><em>人在天朝的话，极有可能出现安装速度过于缓慢的情况，有时候会让你感觉安装处于假死的状态，不必担心，耐心等待即可，切不可心烦意乱的关闭终端窗口（网上有其他教程说可以切换 brew 的源到中科大 CDN，本人亲测：中科大 CDN 虽然快很多，但是clone 下来的文件和原本源存在一定差异，更新不及时。个人建议还是耐心等待，使用原本的源）</em></p><p>开启 Redis方法（打开 Terminal 终端，输入）：</p><blockquote><p>redis-server</p></blockquote><p>之后进入了管理模式，如果看到Ready to accept connections，说明安装运行成功，直接关闭终端再打开即可</p><p>安装 Php-Redis方法（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://pecl.php.net/get/redis-3.1.3.tgz </span><br><span class="line">tar -zxvf redis-3.1.3.tgz</span><br><span class="line">cd redis-3.1.3 </span><br><span class="line">phpize </span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>修改 php.ini方法（打开 Terminal 终端，输入）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#使用 vim 编辑器编辑 php.ini</span><br><span class="line">vi /usr/local/etc/php/7.2/php.ini</span><br><span class="line">//在文件最后加入extension=redis.so</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#重启 php-fpm </span><br><span class="line">sudo killall php-fpm &amp;&amp; sudo php-fpm -D </span><br><span class="line">#查看是否安装成功 </span><br><span class="line">php -m | grep redis</span><br></pre></td></tr></table></figure><p>以上。</p><p>补充：在我的这个markdown下，缩进没有代码块，要使用 三个反引号 才行。 好吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建PHP环境&quot;&gt;&lt;a href=&quot;#搭建PHP环境&quot; class=&quot;headerlink&quot; title=&quot;搭建PHP环境&quot;&gt;&lt;/a&gt;搭建PHP环境&lt;/h1&gt;&lt;p&gt;电脑买了也有一段时间了，买回来没多久我就搭了环境，&lt;br&gt;参照的是这篇文章：&lt;/p&gt;
&lt;p&gt;&lt;a h
      
    
    </summary>
    
    
      <category term="mac" scheme="https://lyubingo.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>安装cleanmymac3破解版</title>
    <link href="https://lyubingo.github.io/2018/06/08/2%E5%AE%89%E8%A3%85%E7%A0%B4%E8%A7%A3%E7%89%88cleanmymac3/"/>
    <id>https://lyubingo.github.io/2018/06/08/2安装破解版cleanmymac3/</id>
    <published>2018-06-08T07:31:54.000Z</published>
    <updated>2018-06-08T10:05:51.880Z</updated>
    
    <content type="html"><![CDATA[<p>这是我的第二篇博文了，很高兴。</p><p>我安装了破解版的cleanmymac3，记录一下。</p><p>好了，开始！</p><h1 id="cleanmymac3破解版"><a href="#cleanmymac3破解版" class="headerlink" title="cleanmymac3破解版"></a>cleanmymac3破解版</h1><p>cleanmymac这款软件很好用，可惜要收费啊，没办法，开始寻找破解版。</p><p><code>不要在拥有正版的前提下下载破解版然后移动至启动台时选择“保留两者”，并不会出现两个cleanmymac，而是直接损坏。。</code></p><p>反正我以后都会尽量避免“保留两者”</p><p>下载破解版，然后“替换”，我的就可以使用啦。</p><p>下载链接，这是我参照的原文链接<a href="https://seakee.top/other/cleanmymac-3-9-2-high-sierra.html" target="_blank" rel="noopener">https://seakee.top/other/cleanmymac-3-9-2-high-sierra.html</a></p><p>版本号是3.9.4，支持macOS 10.13 High Sierra，如果你的经济实力允许，还请购买<a href="https://macpaw.com/zh/store/cleanmymac?cs=c" target="_blank" rel="noopener">正版</a></p><p>我们知道，如果装非来自appstore的软件，会提示是否坚持打开，这是系统的一种安全机制保护，但其实，提示文件已损坏也是安全机制的一种保护，如果收到该提示，可以这样做，在命令下输入：</p><blockquote><p>sudo spctl –master-disable</p></blockquote><p>然后在设置偏好里就可以选择“任何来源”了，选择它，然后就可以打开了。</p><p>CleanMyMac 3.9.4 By TNT  </p><blockquote><p>解压密码 seakee.top</p></blockquote><p>百度云下载链接：</p><blockquote><p><a href="https://pan.baidu.com/s/1p2ZrT2E-DIdyYCQ5kuZy-g" target="_blank" rel="noopener">https://pan.baidu.com/s/1p2ZrT2E-DIdyYCQ5kuZy-g</a> 密码: 3jky</p></blockquote><p>ok！</p><p>如果没有了可以私信我，我这里保留着一份。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这是我的第二篇博文了，很高兴。&lt;/p&gt;
&lt;p&gt;我安装了破解版的cleanmymac3，记录一下。&lt;/p&gt;
&lt;p&gt;好了，开始！&lt;/p&gt;
&lt;h1 id=&quot;cleanmymac3破解版&quot;&gt;&lt;a href=&quot;#cleanmymac3破解版&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
      <category term="mac" scheme="https://lyubingo.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>我是如何搭建这个博客的</title>
    <link href="https://lyubingo.github.io/2018/06/05/1%E6%88%91%E6%98%AF%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%9A%84/"/>
    <id>https://lyubingo.github.io/2018/06/05/1我是如何搭建这个博客的/</id>
    <published>2018-06-05T07:13:37.000Z</published>
    <updated>2018-06-06T01:44:34.381Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初心"><a href="#初心" class="headerlink" title="初心"></a>初心</h1><p>一直想拥有一个属于自己网页博客，这样就可以肆无忌惮的写文章了。  </p><p>并且，在网页都能够找得到，多好啊，</p><p>所以，我就瞎写吧。</p><p>开始！</p><h1 id="物色"><a href="#物色" class="headerlink" title="物色"></a>物色</h1><p>首先在网上物色模版，看到了网站<a href="https://mrdear.cn" target="_blank" rel="noopener">mrdear.cn</a>，很是喜欢，研究后发现是基于<a href="http://hexo.io" target="_blank" rel="noopener">hexo</a>的<a href="http://github.com/Mrminfive/hexo-theme-skapp" target="_blank" rel="noopener">skapp主题</a>，然后我也想要。</p><p>hexo是基于node的，我之前没弄过，但是我不放弃尝试，根据教程一步步走就好。google了多篇文章，然后大意通读一遍，了解大致梗概。</p><p>发现： 如果照着一篇文章直接去弄， 不一定可以弄好， 根据自己的理解把它们整合了一下，最终搭建了此博客。</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h3 id="下载node"><a href="#下载node" class="headerlink" title="下载node"></a>下载node</h3><p>mac下使用brew下载node：<br>首先可以手动更新一下：</p><blockquote><p>brew update</p></blockquote><p>由于改模板使用到了lunr，可能不支持高版本的node，因此使用nvm下载其推荐版本的node，我下载的是， LTS 8.9.3，正是其推荐版本</p><p>下载nvm   </p><blockquote><p>brew install nvm</p></blockquote><p>进入自己目录，修改.bash_profile</p><blockquote><p>cd ~<br>vim .bash_profile</p></blockquote><p>添加这两行：</p><blockquote><p>export NVM_DIR=~/.nvm<br>source $(brew –prefix nvm)/nvm.sh</p></blockquote><p>这两行应该是添加到环境变量的意思，就是不论在哪个目录都可以使用nvm命令都意思</p><p>修改完之后还需要更新一下：</p><blockquote><p>source .bash_profile</p></blockquote><p>然后使用nvm查看所有的node对应的版本库</p><blockquote><p>nvm ls-remote</p></blockquote><p>在列表选择自己想要下载的对应版本，这里下载8.9.3LTS版本：</p><blockquote><p>nvm install v8.9.3</p></blockquote><p>使用这个版本，默认使用该版本：</p><blockquote><p>nvm use v8.9.3<br>nvm alias default v8.9.3</p></blockquote><p>一般装了node都会装上npm，查看node和npm版本</p><blockquote><p>node -v<br>npm -v</p></blockquote><h3 id="下载hexo"><a href="#下载hexo" class="headerlink" title="下载hexo"></a>下载hexo</h3><p>使用npm全局下载博客，hexo：</p><blockquote><p>npm install -g hexo</p></blockquote><p>然后我进到了自己的用户目录，即～，创建了blog文件夹，然后进入文件夹创建了github文件夹，最后进入github文件，创建了最终的文件夹，名为yourUserName.github.io，此处的<code>yourUserName</code>指的是你的github用户名，因为hexo可以免费部署在github上，同名比较好管理，比如我的叫做<code>lyubingo.github.io</code>，然后在此文件夹里初始化hexo：</p><blockquote><p>hexo init</p></blockquote><p>查看<code>ls</code>当前目录，可以多出了好多文件，其中，<code>_config.yml</code>是关键的配置文件，里面对应的项网上都可以查到。</p><p>接下来下载自己喜欢的主题，我使用的是skapp主题，命令如下：</p><blockquote><p>cd themes &amp;&amp; git clone <a href="https://github.com/Mrminfive/hexo-theme-skapp.git" target="_blank" rel="noopener">https://github.com/Mrminfive/hexo-theme-skapp.git</a></p></blockquote><p>当然，在此之前你必须有git，git我就不多说了，另外要注意的是，进到theme之后再进行克隆。</p><p>然后，进入该主题的github页，作者会告诉你如何配置和使用他的作品，这里贴一下地址，照着做就可以。</p><p>我的主题网址：<a href="https://github.com/lyubingo/hexo-theme-skapp/blob/master/README-cn.md" target="_blank" rel="noopener">链接</a></p><p>按照他的配置配置好，装好他的依赖，然后在本地调试通过即可，上面都有写，我就不啰嗦了。</p><h3 id="同步github"><a href="#同步github" class="headerlink" title="同步github"></a>同步github</h3><p>按照作者的意思弄完之后，本地可以访问了，但是线上没有，所以这步是同步到github。</p><p>github上注册一个账号，然后创建一个仓库，即responsetiy，把库的名字取为yourUserName.github.io，然后该域名就属于你啦。</p><p>需要注意的有两点：  </p><blockquote><p>1.如果是qq.com好像不支持<br>2.库名为lyubingo.github.io而不是lyubingo..</p></blockquote><p>然后，就是把github和本地关联起来。</p><p>添加github的相关配置信息</p><blockquote><p>vim _config.yml  </p></blockquote><pre><code>deploy:        type: git      repo: https://github.com/lyubingo/lyubingo.github.io.git        branch: master</code></pre><p>然后关联起来：  </p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p>好了，差不多了。<br>接下来使用</p><blockquote><p>hexo g 生成文件<br>hexo s 本地调试<br>hexo d 推送到github线上</p></blockquote><p>即可。</p><p>通常，可以使用</p><blockquote><p>hexo clean</p></blockquote><p>清理一下，然后生成文件，然后本地调试或者推送到github都可以。</p><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>写文章：</p><p>这个其实hexo文档可以查到，不过我也说一下吧，使用命令<br><code>hexo new [layout] &lt;title&gt;</code></p><p>关于什么是layout，可以参考这篇：<a href="http://oakland.github.io/2016/05/02/hexo-%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E4%B8%80%E7%AF%87%E6%96%B0%E7%9A%84post/#textlogo" target="_blank" rel="noopener">链接</a></p><p>删除文章：<br>在本地删除source文件夹下_posts里面对应的md文件然后<code>hexo g, hexo d</code>push上去即可。</p><p>好啦，就这么多啦。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;初心&quot;&gt;&lt;a href=&quot;#初心&quot; class=&quot;headerlink&quot; title=&quot;初心&quot;&gt;&lt;/a&gt;初心&lt;/h1&gt;&lt;p&gt;一直想拥有一个属于自己网页博客，这样就可以肆无忌惮的写文章了。  &lt;/p&gt;
&lt;p&gt;并且，在网页都能够找得到，多好啊，&lt;/p&gt;
&lt;p&gt;所以，我
      
    
    </summary>
    
    
      <category term="hexo github" scheme="https://lyubingo.github.io/tags/hexo-github/"/>
    
  </entry>
  
</feed>
